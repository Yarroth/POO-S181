import tkinter as tk
import requests
from bs4 import BeautifulSoup
import pandas as pd
from sklearn.linear_model import LinearRegression
import mysql.connector

def predict_price():
    model = model_entry.get()
    year = int(year_entry.get())
    cnx = mysql.connector.connect(user='user', password='password', host='host', database='database')
    cursor = cnx.cursor()
    query = 'SELECT precio, precio_previsto FROM autos WHERE modelo=%s AND ano=%s'
    cursor.execute(query, (model, year))
    result = cursor.fetchone()
    if result:
        actual_price = result[0]
        predicted_price = result[1]
        result_label.config(text=f'Precio actual: ${actual_price:.2f}. Precio previsto: ${predicted_price:.2f}.')
    else:
        result_label.config(text='No se encontraron resultados.')
    cursor.close()
    cnx.close()

# Creación de la interfaz gráfica
root = tk.Tk()
root.title('Previsión del precio de un automóvil')

model_label = tk.Label(root, text='Modelo')
model_label.grid(row=0, column=0)
model_entry = tk.Entry(root)
model_entry.grid(row=0, column=1)

year_label = tk.Label(root, text='Año')
year_label.grid(row=1, column=0)
year_entry = tk.Entry(root)
year_entry.grid(row=1, column=1)

predict_button = tk.Button(root, text='Prever precio', command=predict_price)
predict_button.grid(row=2, column=0, columnspan=2, pady=10)

result_label = tk.Label(root, text='')
result_label.grid(row=3, column=0, columnspan=2)

root.mainloop()

#Agregar una función que extraiga datos de precios de autos de un sitio web de referencia

def extract_data(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    prices = []
    for price in soup.find_all('span', {'class': 'price'}):
        prices.append(float(price.text.replace('$', '').replace(',', '')))
    return prices

#Utilizar la función extract_data en la función predict_price para obtener una lista de precios de autos del modelo y año dados.
def predict_price():
    model = model_entry.get()
    year = int(year_entry.get())
    cnx = mysql.connector.connect(user='user', password='password', host='host', database='database')
    cursor = cnx.cursor()
    query = 'SELECT precio, precio_previsto FROM autos WHERE modelo=%s AND ano=%s'
    cursor.execute(query, (model, year))
    result = cursor.fetchone()
    if result:
        actual_price = result[0]
        predicted_price = result[1]
        result_label.config(text=f'Precio actual: ${actual_price:.2f}. Precio previsto: ${predicted_price:.2f}.')
    else:
        result_label.config(text='No se encontraron resultados.')
    cursor.close()
    cnx.close()
    
    urls = ['https://www.autoscout24.mx/lst/audi?sort=age&desc=1&offer=J|U&atype=C&ustate=N%2CU&size=20&page=1&cy=MEX&fregto=2015&fregfrom=2006',
            'https://www.autoplaza.com.mx/venta-autos?make=0&model=0&price=0%2C1500000&yearFrom=2000&yearTo=2022&transmission=0&doors=0&order=year-desc&keywords=']
    
    prices = []
    for url in urls:
        prices += extract_data(url)
    
    X = pd.DataFrame({'precio': prices})
    y = X.precio.shift(-1)
    X = X[:-1]
    
    model = LinearRegression()
    model.fit(X, y)
    
    predicted_price = model.predict([[actual_price]])[0]
    
    result_label.config(text=f'Precio actual: ${actual_price:.2f}. Precio previsto: ${predicted_price:.2f}.')
